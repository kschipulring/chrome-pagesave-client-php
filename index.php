<?php

// autoload.php @generated by Composer
require_once 'vendor/autoload.php';

//for .env settings
$dotenv = Dotenv\Dotenv::createImmutable(__DIR__);
$dotenv->load();

/**
* PURPOSE: get the credentials needed to log on to the Chromepage server (if needed)
* @param void
* @return array - HTTP AUTH username and password in plain array. The return value is useful as is for HTTP Auth with Guzzle.
*/
function getHTTPAuthCreds(): array{
    //for when HTTP authentication is required
    $user_opt = getopt(null, ["user:"]);
    $pass_opt = getopt(null, ["pass:"]);
    
    //the command line option overrides what is from the .env file
    $user = $user_opt["user"] ?? $_ENV['USER'] ?? "";
    $pass = $user_opt["pass"] ?? $_ENV['PASS'] ?? "";
    
    return [$user, $pass];
}

/**
* PURPOSE: get the raw HTML contents from specified URL that the Chromepage server saved to, 
* then save it locally to specified file location on this PHP server.
*
* @param string|null $src_url - optional, where did the Chromepage server render to? 
* But if not populated, then the function will first see if it is populated from the command line, if not, then the .env file.
*
* @param string|null $dest_file - optional, what should the system save the file as?
*
* @return void
*/
function getRenderedPage(?string $src_url=null, ?string $dest_file=null): void{
    $client = new GuzzleHttp\Client();
    
    $chromepage_rendered_url_opt = getopt(null, ["chromepage_rendered_url:"]);
    $chromepage_save_filename_opt = getopt(null, ["chromepage_save_filename:"]);
    
    //the command line options overrides what are from the .env file. The following settings are REQUIRED.
    $chromepage_rendered_url = $src_url ?? $chromepage_rendered_url_opt["chromepage_rendered_url"] ?? $_ENV['CHROMEPAGE_RENDERED_URL'];
    $chromepage_save_filename = $dest_file ?? $chromepage_save_filename_opt["chromepage_save_filename"] ?? $_ENV['CHROMEPAGE_SAVE_FILENAME'];
    
    //the actual request
    $res = $client->request('GET', $chromepage_rendered_url, [
        'auth' => getHTTPAuthCreds()
    ]);
    
    echo $res->getStatusCode();
    // "200"
    
    echo $res->getHeader('content-type')[0];
    // 'application/json; charset=utf8'

    file_put_contents($chromepage_save_filename, $res->getBody());
}

/**
* PURPOSE: render a webpage specified by URL using Chromedriver.
*
* @param void
* @return void
*/
function renderRemotePage(): void{
    //the source URL that the remote Chromedriver will render from (ORIGIN_URL)
    $origin_url_opt = getopt(null, ["origin_url:"]);
    
    //base URL for the Chromepage server renderer.
    $chromepage_base_url_renderer_opt = getopt(null, ["chromepage_base_url_renderer:"]);


    //The command line option overrides what is from the .env file. REQUIRED.
    $origin_url = $origin_url_opt["origin_url"] ?? $_ENV['ORIGIN_URL'];
    
    $chromepage_base_url_renderer = $chromepage_base_url_renderer_opt["chromepage_base_url_renderer"] ?? 
      $_ENV['CHROMEPAGE_BASE_URL_RENDERER'];
    

    //requires base64 encoding for security purposes
    $url = $chromepage_base_url_renderer . base64_encode($origin_url);
    
    $client = new GuzzleHttp\Client();
    
    // Send an asynchronous request. Here, JSON will be returned which includes info on the saved file URL.
    $request = new \GuzzleHttp\Psr7\Request('GET', $url);
    $promise = $client->sendAsync($request, getHTTPAuthCreds())->then(function ($response) {
        echo $response->getBody();
        
        /*
        should the service merely tell the remote Chromedriver to save a webpage for itself, 
        or should this PHP script then also save the results from that to this PHP server?
        */
        
    });
    $promise->wait();
}

//get the command line parameter for which operation shall be done here.
$operation = getopt(null, ["operation:"]);

//which operation shall occur? By default, it would be saving the rendered HTML page to this PHP server.
if( !empty($operation) && $operation["operation"] === "render" ){
    renderRemotePage();
}else{
    getRenderedPage();
}
